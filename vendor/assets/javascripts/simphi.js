var Simphi;

Simphi = (function() {
  Simphi.prototype.HASH_ELEMENT_IDENTIFIER = '.hash-pair';

  function Simphi(target) {
    this.target = $(target);
    this.index = this.target.siblings(this.HASH_ELEMENT_IDENTIFIER).length + 1;
  }

  Simphi.prototype.changedHashIndex = function(original) {
    return original.replace(/hash-\d+/, "hash-" + this.index);
  };

  Simphi.prototype.newHashInput = function() {
    var instance, sample;
    instance = this;
    sample = this.target.siblings(this.HASH_ELEMENT_IDENTIFIER + ".sample").clone(true);
    sample.removeClass('sample');
    sample.attr({
      'class': instance.changedHashIndex(sample.attr('class'))
    });
    sample.find('input').each(function() {
      var input;
      input = this;
      $(input).removeAttr('disabled');
      return $.each(['name', 'id'], function() {
        var currentValue;
        currentValue = $(input).attr(this);
        return $(input).attr(this, instance.changedHashIndex(currentValue));
      });
    });
    return sample;
  };

  Simphi.prototype.addHashInput = function() {
    var newHashInput;
    newHashInput = this.newHashInput();
    return $(newHashInput).insertBefore(this.target);
  };

  Simphi.prototype.removeHashInput = function() {
    return this.target.parents('.hash-pair').remove();
  };

  return Simphi;

})();

$(document).ready(function() {
  $('button.add_hash_pair').click(function(e) {
    var he;
    e.preventDefault();
    he = new Simphi(e.currentTarget);
    return he.addHashInput();
  });
  return $('button.remove_hash_pair').click(function(e) {
    var he;
    e.preventDefault();
    he = new Simphi(e.currentTarget);
    return he.removeHashInput();
  });
});

// ---
// generated by coffee-script 1.9.2
